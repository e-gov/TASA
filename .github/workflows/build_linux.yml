name: Build and Release For Linux

on:
  push:
    branches:
      - main
      - develop
    # Match feature/ and bugfix/ branches
    paths-ignore:
      - "**/README.md"

jobs:
  build-and-release-for-linux:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Get version info
    - name: Get version information
      id: version_info
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        BUILD_ID=${GITHUB_RUN_NUMBER}

        if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
          YEAR=$(date +'%y')
          WEEK=$(date +'%U')
          VERSION="${YEAR}.${WEEK}.0-${BUILD_ID}"
          echo "BUILD_TYPE=stable" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
          YEAR=$(date +'%y')
          WEEK=$(date +'%U')
          VERSION="${YEAR}.${WEEK}.0-${COMMIT_HASH}-rc.${BUILD_ID}"
          echo "BUILD_TYPE=rc" >> $GITHUB_ENV
        elif [[ "${GITHUB_REF_NAME}" == feature/* || "${GITHUB_REF_NAME}" == bugfix/* ]]; then
          YEAR=$(date +'%y')
          WEEK=$(date +'%U')
          VERSION="${YEAR}.${WEEK}.0-${COMMIT_HASH}-dev.${BUILD_ID}"
          echo "BUILD_TYPE=dev" >> $GITHUB_ENV
        else
          echo "Unsupported branch type: ${GITHUB_REF_NAME}"
          exit 1
        fi

        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "Version: ${VERSION}"

    # Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12.7

    # Install Nuitka
    - name: Install Nuitka
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    # Build the executable
    - name: Build executable
      run: |
        mkdir -p build/linux
        nuitka --standalone --onefile --output-dir=build/linux --output-filename=tasa src/gui.py \
          --include-data-files=src/low.png=low.png

    # Upload artifact to release
    - name: Upload to GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: build/linux/tasa
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        body: |
          This release contains the following:
          - Built OS: `Linux`
          - Built file: `tasa`
          - Build Type: ${{ env.BUILD_TYPE }}
        draft: true  # Set to false if you want it published immediately
